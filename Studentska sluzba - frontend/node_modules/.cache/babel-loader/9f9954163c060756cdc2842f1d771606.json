{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vukasin\\\\Desktop\\\\KONTEJNER SVEGA\\\\POSAO\\\\Internet Programiranje\\\\Kodovi\\\\fakultet-frontend-test\\\\src\\\\Professors\\\\Professors.js\",\n    _s = $RefreshSig$();\n\nimport \"../bootstrap.css\";\nimport { useEffect, useState } from \"react\";\nimport HOST from \"../Setup\";\nimport LoadingContents from \"../Home/Loading\";\nimport { Link } from \"react-router-dom\";\nimport MoreInfo from \"../Home/MoreInfo\";\nimport AddButton from \"../Home/AddButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Professors() {\n  _s();\n\n  const [laoding, setLoading] = useState(false);\n  const [professors, setProfessors] = useState([]);\n  useEffect(() => {\n    let url = \"http://localhost:8080/professors\";\n    const professors = [{\n      id: 3,\n      firstname: \"Zana\",\n      lastname: \"Crnogorac\",\n      sex: \"Z\",\n      academicTitle: \"asistent\"\n    }, {\n      id: 4,\n      firstname: \"Mirko\",\n      lastname: \"Markovic\",\n      sex: \"M\",\n      academicTitle: \"asistent\"\n    }];\n    professors.map(professor => {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(professor)\n      };\n      fetch(url, requestOptions).then(response => response.json()).then(data => console.log(\"seper\")).catch(() => console.log(\"PROBLEM\")).finally(() => {\n        console.log(\"ZAvrseno\");\n      });\n    });\n  }, []);\n  useEffect(() => {\n    setLoading(true); //  let url = 'https://jsonplaceholder.typicode.com/users';\n\n    let url = HOST + \"/professors\";\n    fetch(url).then(response => {\n      response.json().then(result => {\n        setProfessors(result);\n      });\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [laoding && /*#__PURE__*/_jsxDEV(LoadingContents, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"All professors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Sex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Academic title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"More info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: professors.map((e, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: e.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: e.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: e.sex === \"M\" ? \"Man\" : \"Woman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: e.academicTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/professors/\" + e.id,\n              children: /*#__PURE__*/_jsxDEV(MoreInfo, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/professors/editprofessor\",\n      children: /*#__PURE__*/_jsxDEV(AddButton, {\n        text: \"Add new professor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Professors, \"mihkwlpnenWhmbV4BF4+JbUSYfk=\");\n\n_c = Professors;\nexport default Professors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Professors\");","map":{"version":3,"sources":["C:/Users/vukasin/Desktop/KONTEJNER SVEGA/POSAO/Internet Programiranje/Kodovi/fakultet-frontend-test/src/Professors/Professors.js"],"names":["useEffect","useState","HOST","LoadingContents","Link","MoreInfo","AddButton","Professors","laoding","setLoading","professors","setProfessors","url","id","firstname","lastname","sex","academicTitle","map","professor","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","console","log","catch","finally","result","e","i"],"mappings":"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","sourcesContent":["import \"../bootstrap.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport HOST from \"../Setup\";\r\nimport LoadingContents from \"../Home/Loading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreInfo from \"../Home/MoreInfo\";\r\nimport AddButton from \"../Home/AddButton\";\r\n\r\nfunction Professors() {\r\n  const [laoding, setLoading] = useState(false);\r\n  const [professors, setProfessors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let url = \"http://localhost:8080/professors\";\r\n\r\n    const professors = [\r\n      {\r\n        id: 3,\r\n        firstname: \"Zana\",\r\n        lastname: \"Crnogorac\",\r\n        sex: \"Z\",\r\n        academicTitle: \"asistent\",\r\n      },\r\n      {\r\n        id: 4,\r\n        firstname: \"Mirko\",\r\n        lastname: \"Markovic\",\r\n        sex: \"M\",\r\n        academicTitle: \"asistent\",\r\n      },\r\n    ];\r\n\r\n    professors.map((professor) => {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(professor),\r\n      };\r\n\r\n      fetch(url, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => console.log(\"seper\"))\r\n        .catch(() => console.log(\"PROBLEM\"))\r\n        .finally(() => {\r\n          console.log(\"ZAvrseno\");\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    //  let url = 'https://jsonplaceholder.typicode.com/users';\r\n    let url = HOST + \"/professors\";\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        response.json().then((result) => {\r\n          setProfessors(result);\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {laoding && <LoadingContents />}\r\n      <h3 className=\"text-center\">All professors</h3>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Firstname</th>\r\n            <th scope=\"col\">Lastname</th>\r\n            <th scope=\"col\">Sex</th>\r\n            <th scope=\"col\">Academic title</th>\r\n            <th scope=\"col\">More info</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {professors.map((e, i) => (\r\n            <tr key={i}>\r\n              <td>{e.firstname}</td>\r\n              <td>{e.lastname}</td>\r\n              <td>{e.sex === \"M\" ? \"Man\" : \"Woman\"}</td>\r\n              <td>{e.academicTitle}</td>\r\n              <td className=\"text-center\">\r\n                <Link to={\"/professors/\" + e.id}>\r\n                  <MoreInfo />\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Link to=\"/professors/editprofessor\">\r\n        <AddButton text=\"Add new professor\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Professors;\r\n"]},"metadata":{},"sourceType":"module"}