{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vukasin\\\\Desktop\\\\KONTEJNER SVEGA\\\\POSAO\\\\Internet Programiranje\\\\Kodovi\\\\fakultet-frontend-test\\\\src\\\\Courses\\\\EditCourse.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport HOST from \"../Setup\";\nimport \"../bootstrap.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCourse() {\n  _s();\n\n  const {\n    professorId\n  } = useParams();\n  const {\n    courseId\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [courseCode, setCourseCode] = useState(\"\");\n  const [ects, setEcts] = useState(\"\");\n  const [professorOptions, setProfessorOptions] = useState([]);\n  const [professorIdState, setProfessorId] = useState(professorId);\n  const [validInput, setValidInput] = useState(false);\n  useEffect(() => {\n    if (courseId) {\n      let url = HOST + \"/courses/\" + courseId;\n      fetch(url).then(response => {\n        response.json().then(result => {\n          setName(result.name);\n          setCourseCode(result.courseCode);\n          setEcts(result.ects);\n          setProfessorId(result.professor.id);\n        });\n      });\n    }\n\n    let urlGetAllProfessors = HOST + \"/professors\";\n    fetch(urlGetAllProfessors).then(response => {\n      response.json().then(result => {\n        let helpList = [];\n        result.map(p => helpList.push({\n          value: p.id,\n          label: p.firstname + \" \" + p.lastname + \", \" + p.academicTitle\n        }));\n        setProfessorOptions(helpList);\n      });\n    });\n    console.log(\"\\n\\n\\n\\n\");\n    console.log(professorId);\n    console.log(\"\\n\\n\\n\\n\");\n  }, []);\n\n  function changeName(event) {\n    setName(event.target.value);\n    checkValidInput();\n  }\n\n  function changeCourseCode(event) {\n    setCourseCode(event.target.value);\n    checkValidInput();\n  }\n\n  function changeEcte(event) {\n    setEcts(event.target.value);\n    checkValidInput();\n  }\n\n  function changeProfessor(event) {\n    professorId = event.target.value;\n    checkValidInput();\n  }\n\n  function checkValidInput() {\n    if (name.trim() == \"\" || courseCode.trim() == \"\" || ects <= 0 || !professorId) {\n      setValidInput(false);\n    } else setValidInput(true);\n  }\n\n  function handleSubmit() {\n    console.log(\"\\n\\n\\n\\n\");\n    console.error(\"EDIT COURSE -> handleSubmit \\n POPRAVITI professorId\");\n    console.log(\"\\n\\n\\n\\n\");\n    professorId = 1;\n    let url = HOST + \"/professors/\" + professorId + \"/courses\";\n    let course = {};\n    course[\"name\"] = name;\n    course[\"courseCode\"] = courseCode;\n    course[\"ects\"] = ects;\n    let methodName = \"POST\";\n\n    if (courseId) {\n      course[\"id\"] = courseId;\n      url = HOST + \"/courses\";\n      methodName = \"PUT\";\n    }\n\n    let requestOptions = {\n      method: methodName,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(course)\n    };\n    fetch(url, requestOptions);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      align: \"center\",\n      children: \"Course details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              value: name,\n              onChange: changeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Course code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"courseCode\",\n              value: courseCode,\n              onChange: changeCourseCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"ECTS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"ects\",\n              value: ects,\n              onChange: changeEcte\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Professor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              options: professorOptions,\n              onChange: changeProfessor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              onChange: changeProfessor,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                children: \"Select professor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), allProfessors.map((e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: e.id,\n                children: e.firstname + \" \" + e.lastname + \", \" + e.academicTitle\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/courses\",\n          onClick: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCourse, \"OqL5q5ATJVMGHR2p6TKD5gFCacM=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = EditCourse;\nexport default EditCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCourse\");","map":{"version":3,"sources":["C:/Users/vukasin/Desktop/KONTEJNER SVEGA/POSAO/Internet Programiranje/Kodovi/fakultet-frontend-test/src/Courses/EditCourse.js"],"names":["useEffect","useState","HOST","Link","useParams","EditCourse","professorId","courseId","name","setName","courseCode","setCourseCode","ects","setEcts","professorOptions","setProfessorOptions","professorIdState","setProfessorId","validInput","setValidInput","url","fetch","then","response","json","result","professor","id","urlGetAllProfessors","helpList","map","p","push","value","label","firstname","lastname","academicTitle","console","log","changeName","event","target","checkValidInput","changeCourseCode","changeEcte","changeProfessor","trim","handleSubmit","error","course","methodName","requestOptions","method","headers","body","JSON","stringify","allProfessors","e","i"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport HOST from \"../Setup\";\r\nimport \"../bootstrap.css\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nfunction EditCourse() {\r\n  const { professorId } = useParams();\r\n  const { courseId } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [courseCode, setCourseCode] = useState(\"\");\r\n  const [ects, setEcts] = useState(\"\");\r\n  const [professorOptions, setProfessorOptions] = useState([]);\r\n  const [professorIdState, setProfessorId] = useState(professorId);\r\n\r\n  const [validInput, setValidInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (courseId) {\r\n      let url = HOST + \"/courses/\" + courseId;\r\n      fetch(url).then((response) => {\r\n        response.json().then((result) => {\r\n          setName(result.name);\r\n          setCourseCode(result.courseCode);\r\n          setEcts(result.ects);\r\n          setProfessorId(result.professor.id);\r\n        });\r\n      });\r\n    }\r\n\r\n    let urlGetAllProfessors = HOST + \"/professors\";\r\n    fetch(urlGetAllProfessors).then((response) => {\r\n      response.json().then((result) => {\r\n        let helpList = [];\r\n        result.map((p) =>\r\n          helpList.push({\r\n            value: p.id,\r\n            label: p.firstname + \" \" + p.lastname + \", \" + p.academicTitle,\r\n          })\r\n        );\r\n        setProfessorOptions(helpList);\r\n      });\r\n    });\r\n\r\n    console.log(\"\\n\\n\\n\\n\");\r\n    console.log(professorId);\r\n    console.log(\"\\n\\n\\n\\n\");\r\n  }, []);\r\n\r\n  function changeName(event) {\r\n    setName(event.target.value);\r\n    checkValidInput();\r\n  }\r\n\r\n  function changeCourseCode(event) {\r\n    setCourseCode(event.target.value);\r\n    checkValidInput();\r\n  }\r\n\r\n  function changeEcte(event) {\r\n    setEcts(event.target.value);\r\n    checkValidInput();\r\n  }\r\n\r\n  function changeProfessor(event) {\r\n    professorId = event.target.value;\r\n    checkValidInput();\r\n  }\r\n\r\n  function checkValidInput() {\r\n    if (\r\n      name.trim() == \"\" ||\r\n      courseCode.trim() == \"\" ||\r\n      ects <= 0 ||\r\n      !professorId\r\n    ) {\r\n      setValidInput(false);\r\n    } else setValidInput(true);\r\n  }\r\n\r\n  function handleSubmit() {\r\n    console.log(\"\\n\\n\\n\\n\");\r\n    console.error(\"EDIT COURSE -> handleSubmit \\n POPRAVITI professorId\");\r\n    console.log(\"\\n\\n\\n\\n\");\r\n    professorId = 1;\r\n\r\n    let url = HOST + \"/professors/\" + professorId + \"/courses\";\r\n    let course = {};\r\n    course[\"name\"] = name;\r\n    course[\"courseCode\"] = courseCode;\r\n    course[\"ects\"] = ects;\r\n    let methodName = \"POST\";\r\n    if (courseId) {\r\n      course[\"id\"] = courseId;\r\n      url = HOST + \"/courses\";\r\n      methodName = \"PUT\";\r\n    }\r\n    let requestOptions = {\r\n      method: methodName,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(course),\r\n    };\r\n\r\n    fetch(url, requestOptions);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 align=\"center\">Course details:</h3>\r\n      <form>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">Name:</div>\r\n            <div className=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={changeName}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">Course code:</div>\r\n            <div className=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"courseCode\"\r\n                value={courseCode}\r\n                onChange={changeCourseCode}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">ECTS:</div>\r\n            <div className=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"ects\"\r\n                value={ects}\r\n                onChange={changeEcte}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row \">\r\n            <div className=\"col-4\">Professor:</div>\r\n            <div className=\"col-4\">\r\n              <Select options={professorOptions} onChange={changeProfessor} />\r\n\r\n              <select className=\"form-select\" onChange={changeProfessor}>\r\n                <option selected>Select professor</option>\r\n                {allProfessors.map((e, i) => (\r\n                  <option key={i} value={e.id}>\r\n                    {e.firstname + \" \" + e.lastname + \", \" + e.academicTitle}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <Link to=\"/courses\" onClick={handleSubmit}>\r\n            <button>Save</button>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditCourse;\r\n"]},"metadata":{},"sourceType":"module"}