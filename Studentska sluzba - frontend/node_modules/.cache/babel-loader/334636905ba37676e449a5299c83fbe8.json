{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vukasin\\\\Desktop\\\\KONTEJNER SVEGA\\\\POSAO\\\\Internet Programiranje\\\\Kodovi\\\\fakultet-frontend-test\\\\src\\\\Professors\\\\Professors.js\",\n    _s = $RefreshSig$();\n\nimport \"../bootstrap.css\";\nimport { useEffect, useState } from \"react\";\nimport ProfessorRow from \"./ProfessorRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Professors() {\n  _s();\n\n  const [laoding, setLoading] = useState(false);\n  const [professors, setProfessors] = useState([]);\n  useEffect(() => {\n    setLoading(true); //  let url = 'https://jsonplaceholder.typicode.com/users';\n\n    let url = \"http://localhost:8080/professors\";\n    fetch(url).then(response => {\n      response.json().then(result => {\n        console.log(response);\n        setProfessors(result);\n      });\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\"All professors...\", laoding && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading..... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Num\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Sex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Academic title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"More info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), professors.map((e, i) => /*#__PURE__*/_jsxDEV(\"spam\", {\n      children: /*#__PURE__*/_jsxDEV(ProfessorRow, {\n        professor: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Professors, \"lRu2LaBY4BChJGQ7BJsob5mwqAs=\");\n\n_c = Professors;\nexport default Professors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Professors\");","map":{"version":3,"sources":["C:/Users/vukasin/Desktop/KONTEJNER SVEGA/POSAO/Internet Programiranje/Kodovi/fakultet-frontend-test/src/Professors/Professors.js"],"names":["useEffect","useState","ProfessorRow","Professors","laoding","setLoading","professors","setProfessors","url","fetch","then","response","json","result","console","log","finally","map","e","i"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAAC,IAAD,CAAV,CADc,CAGd;;AACA,QAAIG,GAAG,GAAG,kCAAV;AAEAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAc;AAClBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,MAAD,IAAY;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAJ,QAAAA,aAAa,CAACM,MAAD,CAAb;AACD,OAHD;AAID,KANH,EAOGG,OAPH,CAOW,MAAM;AACbX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KATH;AAUD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,oCAEGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFd,eAGE;AAAO,MAAA,KAAK,EAAC,sBAAb;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAgBGE,UAAU,CAACW,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,kBACd;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAED;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YADD,CAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA9CQhB,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import \"../bootstrap.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ProfessorRow from \"./ProfessorRow\";\r\n\r\nfunction Professors() {\r\n  const [laoding, setLoading] = useState(false);\r\n  const [professors, setProfessors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    //  let url = 'https://jsonplaceholder.typicode.com/users';\r\n    let url = \"http://localhost:8080/professors\";\r\n\r\n    fetch(url)\r\n      .then((response) => {\r\n        response.json().then((result) => {\r\n          console.log(response);\r\n          setProfessors(result);\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      All professors...\r\n      {laoding && <div> loading..... </div>}\r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Num</th>\r\n            <th scope=\"col\">Firstname</th>\r\n            <th scope=\"col\">Lastname</th>\r\n            <th scope=\"col\">Sex</th>\r\n            <th scope=\"col\">Academic title</th>\r\n            <th scope=\"col\">More info</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody></tbody>\r\n      </table>\r\n      {professors.map((e, i) => (\r\n        <spam key={i}>\r\n          <ProfessorRow professor={e} />\r\n        </spam>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Professors;\r\n"]},"metadata":{},"sourceType":"module"}