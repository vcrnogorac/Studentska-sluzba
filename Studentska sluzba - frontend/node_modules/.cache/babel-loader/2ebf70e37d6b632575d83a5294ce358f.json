{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vukasin\\\\Desktop\\\\KONTEJNER SVEGA\\\\POSAO\\\\Internet Programiranje\\\\Kodovi\\\\fakultet-frontend-test\\\\src\\\\Courses\\\\EditCourse.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport HOST from \"../Setup\";\nimport \"../bootstrap.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport AddButton from \"../Home/AddButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCourse() {\n  _s();\n\n  const {\n    professorId\n  } = useParams();\n  const {\n    courseId\n  } = useParams();\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [courseCode, setCourseCode] = useState(\"\");\n  const [ects, setEcts] = useState(\"\");\n  const [professorOptions, setProfessorOptions] = useState([]);\n  const [selectedProfessor, setSelectedProfessor] = useState();\n  const [validInput, setValidInput] = useState(false);\n  useEffect(() => {\n    if (courseId) {\n      let url = HOST + \"/courses/\" + courseId;\n      fetch(url).then(response => {\n        response.json().then(result => {\n          setName(result.name);\n          setCourseCode(result.courseCode);\n          setEcts(result.ects);\n          setSelectedProfessor({\n            value: result.professor.id,\n            label: result.professor.firstname + \" \" + result.professor.lastname + \", \" + result.professor.academicTitle\n          });\n        });\n      });\n    }\n\n    let urlGetAllProfessors = HOST + \"/professors\";\n    fetch(urlGetAllProfessors).then(response => {\n      response.json().then(result => {\n        let helpList = [];\n        result.map(p => {\n          helpList.push({\n            value: p.id,\n            label: p.firstname + \" \" + p.lastname + \", \" + p.academicTitle\n          });\n\n          if (professorId && p.id == professorId) {\n            setSelectedProfessor({\n              value: p.id,\n              label: p.firstname + \" \" + p.lastname + \", \" + p.academicTitle\n            });\n          }\n        });\n        setProfessorOptions(helpList);\n      });\n    });\n  }, []);\n\n  function changeName(event) {\n    setName(event.target.value);\n    checkValidInput();\n  }\n\n  function changeCourseCode(event) {\n    setCourseCode(event.target.value);\n    checkValidInput();\n  }\n\n  function changeEcts(event) {\n    setEcts(event.target.value);\n    checkValidInput();\n  }\n\n  function changeProfessor(event) {\n    const newSelectedProfessor = professorOptions.find(p => p.value == event.value);\n    setSelectedProfessor(newSelectedProfessor);\n    checkValidInput();\n  }\n\n  function checkValidInput() {\n    if (name.trim() != \"\" && courseCode.trim() != \"\" && ects > 0 && selectedProfessor) {\n      setValidInput(true);\n    } else setValidInput(false);\n  }\n\n  function handleSubmit(event) {\n    let url = HOST + \"/professors/\" + selectedProfessor.value + \"/courses\";\n    let course = {};\n    course[\"name\"] = name;\n    course[\"courseCode\"] = courseCode;\n    course[\"ects\"] = ects;\n    let methodName = \"POST\";\n\n    if (courseId) {\n      course[\"id\"] = courseId;\n      methodName = \"PUT\";\n    }\n\n    let requestOptions = {\n      method: methodName,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(course)\n    };\n    event.preventDefault();\n    fetch(url, requestOptions).then(() => {\n      navigate(\"/courses\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      align: \"center\",\n      children: \"Course details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              value: name,\n              onChange: changeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Course code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"courseCode\",\n              value: courseCode,\n              onChange: changeCourseCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"ECTS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"ects\",\n              value: ects,\n              onChange: changeEcts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Professor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              options: professorOptions,\n              onChange: changeProfessor,\n              value: selectedProfessor,\n              isDisabled: courseId ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n          text: \"Save\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCourse, \"0CCTzzl83KjR+HUg0/QXwzvDfdY=\", false, function () {\n  return [useParams, useParams, useNavigate];\n});\n\n_c = EditCourse;\nexport default EditCourse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCourse\");","map":{"version":3,"sources":["C:/Users/vukasin/Desktop/KONTEJNER SVEGA/POSAO/Internet Programiranje/Kodovi/fakultet-frontend-test/src/Courses/EditCourse.js"],"names":["useEffect","useState","HOST","useNavigate","useParams","Select","AddButton","EditCourse","professorId","courseId","navigate","name","setName","courseCode","setCourseCode","ects","setEcts","professorOptions","setProfessorOptions","selectedProfessor","setSelectedProfessor","validInput","setValidInput","url","fetch","then","response","json","result","value","professor","id","label","firstname","lastname","academicTitle","urlGetAllProfessors","helpList","map","p","push","changeName","event","target","checkValidInput","changeCourseCode","changeEcts","changeProfessor","newSelectedProfessor","find","trim","handleSubmit","course","methodName","requestOptions","method","headers","body","JSON","stringify","preventDefault"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport HOST from \"../Setup\";\r\nimport \"../bootstrap.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport AddButton from \"../Home/AddButton\";\r\n\r\nfunction EditCourse() {\r\n  const { professorId } = useParams();\r\n  const { courseId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [courseCode, setCourseCode] = useState(\"\");\r\n  const [ects, setEcts] = useState(\"\");\r\n  const [professorOptions, setProfessorOptions] = useState([]);\r\n  const [selectedProfessor, setSelectedProfessor] = useState();\r\n  const [validInput, setValidInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (courseId) {\r\n      let url = HOST + \"/courses/\" + courseId;\r\n      fetch(url).then((response) => {\r\n        response.json().then((result) => {\r\n          setName(result.name);\r\n          setCourseCode(result.courseCode);\r\n          setEcts(result.ects);\r\n          setSelectedProfessor({\r\n            value: result.professor.id,\r\n            label:\r\n              result.professor.firstname +\r\n              \" \" +\r\n              result.professor.lastname +\r\n              \", \" +\r\n              result.professor.academicTitle,\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    let urlGetAllProfessors = HOST + \"/professors\";\r\n    fetch(urlGetAllProfessors).then((response) => {\r\n      response.json().then((result) => {\r\n        let helpList = [];\r\n        result.map((p) => {\r\n          helpList.push({\r\n            value: p.id,\r\n            label: p.firstname + \" \" + p.lastname + \", \" + p.academicTitle,\r\n          });\r\n          if (professorId && p.id == professorId) {\r\n            setSelectedProfessor({\r\n              value: p.id,\r\n              label: p.firstname + \" \" + p.lastname + \", \" + p.academicTitle,\r\n            });\r\n          }\r\n        });\r\n        setProfessorOptions(helpList);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  function changeName(event) {\r\n    setName(event.target.value);\r\n    checkValidInput();\r\n  }\r\n\r\n  function changeCourseCode(event) {\r\n    setCourseCode(event.target.value);\r\n    checkValidInput();\r\n  }\r\n\r\n  function changeEcts(event) {\r\n    setEcts(event.target.value);\r\n    checkValidInput();\r\n  }\r\n\r\n  function changeProfessor(event) {\r\n    const newSelectedProfessor = professorOptions.find(\r\n      (p) => p.value == event.value\r\n    );\r\n    setSelectedProfessor(newSelectedProfessor);\r\n    checkValidInput();\r\n  }\r\n\r\n  function checkValidInput() {\r\n    if (\r\n      name.trim() != \"\" &&\r\n      courseCode.trim() != \"\" &&\r\n      ects > 0 &&\r\n      selectedProfessor\r\n    ) {\r\n      setValidInput(true);\r\n    } else setValidInput(false);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    let url = HOST + \"/professors/\" + selectedProfessor.value + \"/courses\";\r\n\r\n    let course = {};\r\n    course[\"name\"] = name;\r\n    course[\"courseCode\"] = courseCode;\r\n    course[\"ects\"] = ects;\r\n    let methodName = \"POST\";\r\n    if (courseId) {\r\n      course[\"id\"] = courseId;\r\n      methodName = \"PUT\";\r\n    }\r\n\r\n    let requestOptions = {\r\n      method: methodName,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(course),\r\n    };\r\n\r\n    event.preventDefault();\r\n    fetch(url, requestOptions).then(() => {\r\n      navigate(\"/courses\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 align=\"center\">Course details:</h3>\r\n      <form>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">Name:</div>\r\n            <div className=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={changeName}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">Course code:</div>\r\n            <div className=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"courseCode\"\r\n                value={courseCode}\r\n                onChange={changeCourseCode}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">ECTS:</div>\r\n            <div className=\"col-4\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"ects\"\r\n                value={ects}\r\n                onChange={changeEcts}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row \">\r\n            <div className=\"col-4\">Professor:</div>\r\n            <div className=\"col-4\">\r\n              <Select\r\n                options={professorOptions}\r\n                onChange={changeProfessor}\r\n                value={selectedProfessor}\r\n                isDisabled={courseId ? true : false}\r\n              />\r\n            </div>\r\n          </div>\r\n          <AddButton text=\"Save\" onClick={handleSubmit} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditCourse;\r\n"]},"metadata":{},"sourceType":"module"}