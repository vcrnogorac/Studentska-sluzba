{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vukasin\\\\Desktop\\\\KONTEJNER SVEGA\\\\POSAO\\\\Internet Programiranje\\\\Kodovi\\\\fakultet-frontend-test\\\\src\\\\Exams\\\\EditExam.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport HOST from \"../Setup\";\nimport \"../bootstrap.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditExam() {\n  _s();\n\n  let {\n    studentId\n  } = useParams();\n  const {\n    courseId\n  } = useParams();\n  const [allCourses, setAllCourses] = useState([]);\n  const [allStudents, setAllStudents] = useState([]);\n  const [course, setCourse] = useState(null);\n  const [student, setStudent] = useState(null);\n  const [validInput, setValidInput] = useState(false);\n  useEffect(() => {\n    let url = HOST + \"/courses\";\n    fetch(url).then(response => {\n      response.json().then(result => {\n        setAllCourses(result);\n      });\n    });\n    if (courseId) allCourses.map((e, i) => {\n      if (e.id === courseId) setCourse(e);\n    });\n    url = HOST + \"/students\";\n    fetch(url).then(response => {\n      response.json().then(result => {\n        setAllStudents(result);\n      });\n      if (studentId) allCourses.map((e, i) => {\n        if (e.id === studentId) setStudent(e);\n      });\n    });\n  }, []);\n\n  function checkValidInput() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      align: \"center\",\n      children: \"Exam details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Student:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                children: \"Select student\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), allStudents.map((e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: e.id,\n                children: e.firstname + \" \" + e.lastname + \", \" + e.indexNumber\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Course:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                children: \"Select course\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), allCourses.map((e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: e.id,\n                children: e.courseCode + \", \" + e.name\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              name: \"courseCode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/exams\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditExam, \"Pn1TNoF0AkOAuwnrXMAEIcPYr3M=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = EditExam;\nexport default EditExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditExam\");","map":{"version":3,"sources":["C:/Users/vukasin/Desktop/KONTEJNER SVEGA/POSAO/Internet Programiranje/Kodovi/fakultet-frontend-test/src/Exams/EditExam.js"],"names":["useEffect","useState","HOST","Link","useParams","EditExam","studentId","courseId","allCourses","setAllCourses","allStudents","setAllStudents","course","setCourse","student","setStudent","validInput","setValidInput","url","fetch","then","response","json","result","map","e","i","id","checkValidInput","firstname","lastname","indexNumber","courseCode","name"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport HOST from \"../Setup\";\r\nimport \"../bootstrap.css\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nfunction EditExam() {\r\n  let { studentId } = useParams();\r\n  const { courseId } = useParams();\r\n  const [allCourses, setAllCourses] = useState([]);\r\n  const [allStudents, setAllStudents] = useState([]);\r\n  const [course, setCourse] = useState(null);\r\n  const [student, setStudent] = useState(null);\r\n\r\n  const [validInput, setValidInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let url = HOST + \"/courses\";\r\n    fetch(url).then((response) => {\r\n      response.json().then((result) => {\r\n        setAllCourses(result);\r\n      });\r\n    });\r\n\r\n    if (courseId)\r\n      allCourses.map((e, i) => {\r\n        if (e.id === courseId) setCourse(e);\r\n      });\r\n\r\n    url = HOST + \"/students\";\r\n    fetch(url).then((response) => {\r\n      response.json().then((result) => {\r\n        setAllStudents(result);\r\n      });\r\n\r\n      if (studentId)\r\n        allCourses.map((e, i) => {\r\n          if (e.id === studentId) setStudent(e);\r\n        });\r\n    });\r\n  }, []);\r\n\r\n  function checkValidInput() {}\r\n\r\n  return (\r\n    <div>\r\n      <h3 align=\"center\">Exam details:</h3>\r\n      <form>\r\n        <div className=\"container\">\r\n          <div className=\"row \">\r\n            <div className=\"col-4\">Student:</div>\r\n            <div className=\"col-4\">\r\n              <select className=\"form-select\">\r\n                <option selected>Select student</option>\r\n                {allStudents.map((e, i) => (\r\n                  <option key={i} value={e.id}>\r\n                    {e.firstname + \" \" + e.lastname + \", \" + e.indexNumber}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row \">\r\n            <div className=\"col-4\">Course:</div>\r\n            <div className=\"col-4\">\r\n              <select className=\"form-select\">\r\n                <option selected>Select course</option>\r\n                {allCourses.map((e, i) => (\r\n                  <option key={i} value={e.id}>\r\n                    {e.courseCode + \", \" + e.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row \">\r\n            <div className=\"col-4\">Date:</div>\r\n            <div className=\"col-4\">\r\n              <input type=\"date\" className=\"form-control\" name=\"courseCode\" />\r\n            </div>\r\n          </div>\r\n\r\n          <Link to=\"/exams\">\r\n            <button>Save</button>\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditExam;\r\n"]},"metadata":{},"sourceType":"module"}